{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBjp-XXXXXXXXXXXXXXXXXXXX\",\n  authDomain: \"your-app.firebaseapp.com\",\n  projectId: \"your-app\",\n  storageBucket: \"your-app.appspot.com\",\n  messagingSenderId: \"123456789\",\n  appId: \"1:123456789:web:abcdef123456\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst googleProvider = new GoogleAuthProvider();\n\n// Add these configurations\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = async () => {\n  try {\n    const result = await signInWithPopup(auth, googleProvider);\n    const user = result.user;\n    console.log(\"Successfully signed in:\", user);\n    return user;\n  } catch (error) {\n    console.error(\"Error during Google sign-in:\", error);\n    throw error;\n  }\n};\nexport { auth };","map":{"version":3,"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","googleProvider","setCustomParameters","prompt","signInWithGoogle","result","user","console","log","error"],"sources":["/Users/ironman/Desktop/My/my-app/src/utils/firebase.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBjp-XXXXXXXXXXXXXXXXXXXX\",\n  authDomain: \"your-app.firebaseapp.com\",\n  projectId: \"your-app\",\n  storageBucket: \"your-app.appspot.com\",\n  messagingSenderId: \"123456789\",\n  appId: \"1:123456789:web:abcdef123456\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst googleProvider = new GoogleAuthProvider();\n\n// Add these configurations\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\n\nexport const signInWithGoogle = async () => {\n  try {\n    const result = await signInWithPopup(auth, googleProvider);\n    const user = result.user;\n    console.log(\"Successfully signed in:\", user);\n    return user;\n  } catch (error) {\n    console.error(\"Error during Google sign-in:\", error);\n    throw error;\n  }\n};\n\nexport { auth }; "],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,eAAe,EAAEC,kBAAkB,QAAQ,eAAe;AAE5E,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,gCAAgC;EACxCC,UAAU,EAAE,0BAA0B;EACtCC,SAAS,EAAE,UAAU;EACrBC,aAAa,EAAE,sBAAsB;EACrCC,iBAAiB,EAAE,WAAW;EAC9BC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGX,aAAa,CAACI,cAAc,CAAC;AACzC,MAAMQ,IAAI,GAAGX,OAAO,CAACU,GAAG,CAAC;AACzB,MAAME,cAAc,GAAG,IAAIV,kBAAkB,CAAC,CAAC;;AAE/C;AACAU,cAAc,CAACC,mBAAmB,CAAC;EACjCC,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMf,eAAe,CAACU,IAAI,EAAEC,cAAc,CAAC;IAC1D,MAAMK,IAAI,GAAGD,MAAM,CAACC,IAAI;IACxBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,IAAI,CAAC;IAC5C,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,SAAST,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}